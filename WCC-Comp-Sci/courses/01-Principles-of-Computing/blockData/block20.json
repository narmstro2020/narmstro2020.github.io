{
  "welcome": {
    "data": "Warm-Up Prompt: \"What types of games have you played recently? Briefly describe your favorite game, including any noticeable shapes used in the design.\"\nStudents discuss responses in pairs, then share with the class.",
    "time": "8 minutes"
  },
  "aim": {
    "data": "Objective: Students will be able to set up a basic Pygame project, initialize a window, and draw fundamental geometric shapes.\nAgenda: 1) Review Python skills 2) Introduction to Pygame setup 3) Drawing shapes 4) Interactive coding activity 5) Individual challenge 6) Exit reflection.",
    "time": "5 minutes"
  },
  "review": {
    "data": "Review Question: \"What are some Python modules or libraries we've used so far, and what did they help us accomplish?\"\nClass brainstorms modules such as `random`, `math`, and their purposes; notes displayed on board.",
    "time": "8 minutes"
  },
  "relevant": {
    "data": "Mini-Lecture and Demonstration:\n**Setting Up Pygame**\n1. Install with `pip install pygame`\n2. Basic setup:\n```python\nimport pygame\npygame.init()\nscreen = pygame.display.set_mode((800, 600))\npygame.display.set_caption(\"My First Pygame Window\")\n```\n\n**Drawing Shapes**\n- Rectangle:\n```python\npygame.draw.rect(screen, (255, 0, 0), (20, 30, 100, 50))\n```\n- Circle:\n```python\npygame.draw.circle(screen, (0, 255, 0), (200, 150), 40)\n```\n- Line:\n```python\npygame.draw.line(screen, (0, 0, 255), (300, 100), (400, 200), 5)\n```\nExplain parameters and RGB colors clearly.",
    "time": "20 minutes"
  },
  "interactive": {
    "data": "Student Activity:\nStudents use computers to create their first Pygame window and practice drawing rectangles, circles, and lines. Circulate to offer assistance.\n\nInstructor Solution Example:\n```python\nimport pygame\npygame.init()\n\nscreen = pygame.display.set_mode((800, 600))\npygame.display.set_caption(\"Shape Drawing\")\nscreen.fill((255, 255, 255))\n\npygame.draw.rect(screen, (255, 0, 0), (50, 50, 150, 75))\npygame.draw.circle(screen, (0, 255, 0), (400, 300), 50)\npygame.draw.line(screen, (0, 0, 255), (600, 100), (750, 200), 4)\n\npygame.display.flip()\n\n# Simple event loop\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\npygame.quit()\n```",
    "time": "25 minutes"
  },
  "ownership": {
    "data": "Independent Challenge:\n\"Draw a simple face using shapes. Include at least one circle, two rectangles, and one line.\"\n\nInstructor Example Solution:\n```python\nimport pygame\npygame.init()\nscreen = pygame.display.set_mode((400, 400))\nscreen.fill((255, 255, 255))\n\npygame.draw.circle(screen, (255, 224, 189), (200, 200), 100) # face\npygame.draw.rect(screen, (0, 0, 0), (170, 170, 20, 10)) # left eye\npygame.draw.rect(screen, (0, 0, 0), (210, 170, 20, 10)) # right eye\npygame.draw.line(screen, (255, 0, 0), (180, 230), (220, 230), 3) # mouth\n\npygame.display.flip()\n\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\npygame.quit()\n```",
    "time": "15 minutes"
  },
  "resonate": {
    "data": "Exit Reflection:\n1. \"Describe the process of initializing a basic Pygame window.\"\n2. \"List two shapes you learned how to draw and their syntax.\"\n3. \"Rate your confidence in today's lesson (1â€“5) and explain why.\"\n\nInstructor reviews responses to gauge comprehension.",
    "time": "5 minutes"
  },
  "supplies": {
    "data": "Computers with Python installed (PyCharm recommended), projector for live demonstrations, whiteboard/markers, optional reference handouts, and exit tickets (paper or Google Form)."
  }
}
