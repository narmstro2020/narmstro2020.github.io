{
  "welcome": {
    "data": "Warm-up Prompt: &quot;What's your favorite video game soundtrack or sound effect, and why does it stand out to you?&quot;<br>Pair sharing and brief class discussion.",
    "time": "5 minutes"
  },
  "aim": {
    "data": "Objective: Integrate images, sound effects, and music into Pygame projects.<br>Agenda: 1) Review prior concepts 2) Introduce loading/displaying images 3) Introduce playing sounds and music 4) Interactive coding activity.",
    "time": "3 minutes"
  },
  "review": {
    "data": "Review Questions: &quot;What function captures user events in Pygame?&quot; and &quot;How do we update the display?&quot;<br>Quick recap of key concepts (game loop, event handling).",
    "time": "8 minutes"
  },
  "relevant": {
    "data": "Instructor-led demonstration:<br>- Loading and displaying images using <code>pygame.image.load()</code> and <code>blit()</code><br>- Playing sound effects with <code>pygame.mixer.Sound()</code><br>- Playing and looping music with <code>pygame.mixer.music.load()</code> and <code>play(-1)</code><br><br>Example code:<br><pre><code>import pygame<br>pygame.init()<br><br>screen = pygame.display.set_mode((800, 600))<br>image = pygame.image.load(&quot;clown.png&quot;)<br>click_sound = pygame.mixer.Sound(&quot;click_sound.wav&quot;)<br>pygame.mixer.music.load(&quot;background_music.wav&quot;)<br>pygame.mixer.music.play(-1)<br><br>running = True<br>while running:<br>&nbsp;&nbsp;&nbsp;&nbsp;for event in pygame.event.get():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if event.type == pygame.QUIT:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;running = False<br>&nbsp;&nbsp;&nbsp;&nbsp;screen.fill((255,255,255))<br>&nbsp;&nbsp;&nbsp;&nbsp;screen.blit(image, (100, 100))<br>&nbsp;&nbsp;&nbsp;&nbsp;if event.type == pygame.MOUSEBUTTONDOWN:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;click_sound.play()<br>&nbsp;&nbsp;&nbsp;&nbsp;pygame.display.flip()<br>pygame.quit()</code></pre>",
    "time": "25 minutes"
  },
  "interactive": {
    "data": "Pair Activity:<br>Students create a simple Pygame program to display two images, trigger different sound effects with key presses, and play looping music.<br><br>Instructor Solution:<br><pre><code>import pygame<br>pygame.init()<br><br>screen = pygame.display.set_mode((800,600))<br>bg = pygame.image.load(&quot;background.png&quot;)<br>char = pygame.image.load(&quot;clown.png&quot;)<br>sound1 = pygame.mixer.Sound(&quot;click_sound.wav&quot;)<br>sound2 = pygame.mixer.Sound(&quot;miss_sound.wav&quot;)<br>pygame.mixer.music.load(&quot;ctc_background_music.wav&quot;)<br>pygame.mixer.music.play(-1)<br><br>running = True<br>while running:<br>&nbsp;&nbsp;&nbsp;&nbsp;for event in pygame.event.get():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if event.type == pygame.QUIT:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;running = False<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if event.type == pygame.KEYDOWN:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if event.key == pygame.K_a:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound1.play()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if event.key == pygame.K_s:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound2.play()<br>&nbsp;&nbsp;&nbsp;&nbsp;screen.blit(bg, (0,0))<br>&nbsp;&nbsp;&nbsp;&nbsp;screen.blit(char, (350,250))<br>&nbsp;&nbsp;&nbsp;&nbsp;pygame.display.flip()<br>pygame.quit()</code></pre>",
    "time": "15 minutes"
  },
  "ownership": {
    "data": "Individual Task:<br>Students independently enhance their current game projects by adding new images, implementing sound effects, and incorporating looping background music.<br><br>Instructor supports students individually as they work.",
    "time": "20 minutes"
  },
  "resonate": {
    "data": "Reflection Activity:<br>Students write reflections: &quot;What challenges did I encounter integrating multimedia, and how did I overcome them?&quot;<br>Class sharing of selected student reflections.",
    "time": "7 minutes"
  },
  "supplies": {
    "data": "Computers with PyCharm and Pygame installed, projector for instruction, multimedia files (images:
